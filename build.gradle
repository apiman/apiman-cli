/*
 * Copyright 2016 Pete Cornish
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group 'io.apiman.cli'
version '0.2.3'

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: 'java'
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = '1.8'
}

ext {
    version_args4j = '2.33'
    version_log4j = '2.8.2'
    version_guava = '19.0'
    version_retrofit = '1.9.0'
    version_jackson = '1.9.0'
    version_jackson_yaml = '2.7.3'
    version_modelmapper = '0.7.5'
    version_commons_lang = '3.4'
    version_guice = '4.0'
    version_apiman = '1.3.1.Final'

    // test dependencies
    version_junit = '4.12'
    version_ducttape = '1.0.5'
    version_mockito = '2.8.47'
    version_restassured = '2.9.0'
    version_systemrules = '1.16.0'
}

dependencies {
    compile "args4j:args4j:$version_args4j"
    compile "org.apache.logging.log4j:log4j-core:$version_log4j"
    compile "com.google.guava:guava:$version_guava"
    compile "com.squareup.retrofit:retrofit:$version_retrofit"
    compile "com.squareup.retrofit:converter-jackson:$version_retrofit"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$version_jackson_yaml"
    compile "org.modelmapper:modelmapper:$version_modelmapper"
    compile "org.apache.commons:commons-lang3:$version_commons_lang"
    compile "com.google.inject:guice:$version_guice"
    
    // apiman deps
    compile "io.apiman:apiman-gateway-engine-beans:$version_apiman"
    compile "io.apiman:apiman-common-plugin:$version_apiman"
    compile "io.apiman:apiman-manager-api-core:$version_apiman"
    runtime "io.apiman:apiman-distro-data:$version_apiman"

    // route slf4j events to log4j2
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$version_log4j"

    testCompile "junit:junit:$version_junit"
    testCompile "org.rnorth.duct-tape:duct-tape:$version_ducttape"
    testCompile "org.mockito:mockito-core:$version_mockito"
    testCompile "com.jayway.restassured:rest-assured:$version_restassured"
    testCompile "com.github.stefanbirkner:system-rules:$version_systemrules"
}

jar {
    manifest {
        attributes("Main-Class": "io.apiman.cli.Cli")
    }
}

shadowJar {
    baseName = 'apiman-cli'
    classifier = ''
    version = ''
}

test {
    useJUnit {
        // exclude integration tests unless explicitly included
        if (!project.hasProperty('integrationTest')) {
            excludeCategories 'io.apiman.cli.common.IntegrationTest'
        }
    }

    systemProperty "apiman.host", project.properties.get("apiman.host")
    systemProperty "apiman.port", project.properties.get("apiman.port")
}
