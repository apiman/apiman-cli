/*
 * Copyright 2016 Pete Cornish
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group 'io.apiman.cli'
version '0.1.9'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = '1.8'
}

dependencies {
    compile 'args4j:args4j:2.32'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'com.google.guava:guava:19.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.retrofit:converter-jackson:1.9.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.5.4'
    compile 'org.modelmapper:modelmapper:0.7.5'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.google.inject:guice:4.0'

    // route slf4j events to log4j2
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.rnorth.duct-tape:duct-tape:1.0.4'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.github.stefanbirkner:system-rules:1.16.0'
}

jar {
    manifest {
        attributes("Main-Class": "io.apiman.cli.Cli")
    }
}

shadowJar {
    baseName = 'apiman-cli'
    classifier = ''
    version = ''
}

test {
    useJUnit {
        if (project.hasProperty('integrationTest')) {
            includeCategories 'io.apiman.cli.common.IntegrationTest'
        } else {
            excludeCategories 'io.apiman.cli.common.IntegrationTest'
        }
    }

    systemProperty "apiman.host", project.properties.get("apiman.host")
    systemProperty "apiman.port", project.properties.get("apiman.port")
}
